sistema_vendas

settings.py


Django settings for sistema_vendas project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2cp#tvymq6+&i=bu%8eaya%nto5grm9&5xcsrh8^%$bm^p7i2i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cadastro_produtos',
    'cadastro_clientes',
    'vendas',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sistema_vendas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sistema_vendas.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'sistema_vendas',
        'USER': 'postgres',
        'PASSWORD': '010203',
        'HOST': 'localhost',
        'PORT': '5432',
        
       
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

urls.py

from django.contrib import admin
from django.urls import include, path
from sistema_vendas import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.home, name='home'),
    path('cadastro_produtos/', include('cadastro_produtos.urls')),
    path('cadastro_clientes/', include('cadastro_clientes.urls')),
    path('vendas/', include('vendas.urls')),
]



views.py



from django.shortcuts import render

def home(request):
    return render(request, 'base.html')


templates

base.html

!DOCTYPE html>
<html>
<head>
    <title>Sistema de Vendas</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#">Sistema de Vendas</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="{% url 'lista_produtos' %}">Produtos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{% url 'lista_clientes' %}">Clientes</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{% url 'lista_vendas' %}">Vendas</a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <main>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    {% block content %}{% endblock %}
                </div>
            </div>
        </div>
    </main>
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <p>&copy; 2023 Sistema de Vendas</p>
                </div>
            </div>
        </div>
    </footer>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>

-------------------------------------------------------------------------------------------------------------


app cadastro_clientes 
-

-app.py

from django.apps import AppConfig


class CadastroClientesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'cadastro_clientes'




-forms.py

from django import forms
from .models import Cliente

class ClienteForm(forms.ModelForm):
    class Meta:
        model = Cliente
        fields = ('nome', 'cnpj', 'inscricao_estadual', 'cpf', 'rg', 'telefone', 'endereco', 'cep', 'numero', 'bairro', 'email')




-models.py


from django.db import models

class Cliente(models.Model):
    nome = models.CharField(max_length=255)
    cnpj = models.CharField(max_length=255)
    inscricao_estadual = models.CharField(max_length=255)
    cpf = models.CharField(max_length=255)
    rg = models.CharField(max_length=255)
    telefone = models.CharField(max_length=255)
    endereco = models.CharField(max_length=255)
    cep = models.CharField(max_length=255)
    numero = models.CharField(max_length=255)
    bairro = models.CharField(max_length=255)
    email = models.EmailField(max_length=255)




-urls.py

from django.urls import path
from . import views

urlpatterns = [
    path('clientes/', views.lista_clientes, name='lista_clientes'),
    path('clientes/criar/', views.criar_cliente, name='criar_cliente'),
]





-views.py



from django.shortcuts import render, redirect
from .models import Cliente
from .forms import ClienteForm

def lista_clientes(request):
    clientes = Cliente.objects.all()
    return render(request, 'cadastro_clientes/lista_clientes.html', {'clientes': clientes})



def criar_cliente(request):
    if request.method == 'POST':
        form = ClienteForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('lista_clientes')
    else:
        form = ClienteForm()
    return render(request, 'criar_cliente.html', {'form': form})



templates


criar_cliente.html


<!-- criar_cliente.html -->
{% extends 'base.html' %}

{% block content %}
  <h1>Criar Cliente</h1>
  <form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Criar</button>
  </form>
{% endblock %}




lista_clientes.html


<!-- lista_clientes.html -->
{% extends 'base.html' %}

{% block content %}
  <h1>Lista de Clientes</h1>
  <ul>
    {% for cliente in clientes %}
      <li>{{ cliente.nome }} ({{ cliente.cnpj }})</li>
    {% endfor %}
  </ul>
{% endblock %}

-------------------------------------------

app cadastro_produtos


app.py

from django.apps import AppConfig


class CadastroProdutosConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'cadastro_produtos'



forms.py


from django import forms
from .models import Produto

class ProdutoForm(forms.ModelForm):
    class Meta:
        model = Produto
        fields = ('descricao', 'grupo', 'marca', 'unidade_medida', 'custo', 'preco')



models.py



from django.db import models

class Produto(models.Model):
    descricao = models.CharField(max_length=255)
    grupo = models.CharField(max_length=255)
    marca = models.CharField(max_length=255)
    unidade_medida = models.CharField(max_length=255)
    custo = models.DecimalField(max_digits=10, decimal_places=2)
    preco = models.DecimalField(max_digits=10, decimal_places=2)




urls.py


from django.urls import path
from . import views

urlpatterns = [
    path('produtos/', views.lista_produtos, name='lista_produtos'),
    path('produtos/criar/', views.criar_produto, name='criar_produto'),



views.py



from django.shortcuts import render, redirect
from .forms import ProdutoForm
from .models import Produto

def criar_produto(request):
    if request.method == 'POST':
        form = ProdutoForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('lista_produtos')
    else:
        form = ProdutoForm()
    return render(request, 'criar_produto.html', {'form': form})

def lista_produtos(request):
    produtos = Produto.objects.all()
    return render(request, 'cadastro_produtos/lista_produtos.html', {'produtos': produtos})

-----------------------------------------------------------------------------



app vendas



app.py

from django.apps import AppConfig


class VendasConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'vendas'

forms.py

from django import forms
from .models import Venda

class VendaForm(forms.ModelForm):
    class Meta:
        model = Venda
        fields = ('cliente', 'produto', 'quantidade', 'total')


models.py

from django.db import models
from cadastro_produtos.models import Produto
from cadastro_clientes.models import Cliente

class Venda(models.Model):
    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)
    produto = models.ForeignKey(Produto, on_delete=models.CASCADE)
    quantidade = models.IntegerField()
    total = models.DecimalField(max_digits=10, decimal_places=2)



urls.py 


from django.urls import path
from . import views

urlpatterns = [
    path('vendas/', views.lista_vendas, name='lista_vendas'),
    path('vendas/criar/', views.criar_venda, name='criar_venda'),
]


views.py


from django.shortcuts import render, redirect
from .forms import VendaForm
from .models import Venda

def criar_venda(request):
    if request.method == 'POST':
        form = VendaForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('lista_vendas')
    else:
        form = VendaForm()
    return render(request, 'vendas/criar_venda.html', {'form': form})


def lista_vendas(request):
    vendas = Venda.objects.all()
    return render(request, 'vendas/lista_vendas.html', {'vendas': vendas})



templates

criar_venda.html


<!-- criar_venda.html -->
{% extends 'base.html' %}

{% block content %}
  <h1>Criar Venda</h1>
  <form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Criar</button>
  </form>
{% endblock %}


lista_vendas.html



<!-- lista_vendas.html -->
{% extends 'base.html' %}

{% block content %}
  <h1>Lista de Vendas</h1>
  <ul>
    {% for venda in vendas %}
      <li>{{ venda.cliente.nome }} - {{ venda.produto.descricao }} ({{ venda.total }})</li>
    {% endfor %}
  </ul>
{% endblock %}



com base nessa informações o que preciso criar o layout e os campos em cada tela para receber os dados como poso fazer isso





<!-- base.html -->
<!DOCTYPE html>
<html>
<head>
    <title>Sistema de Vendas</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#">Sistema de Vendas</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="{% url 'lista_produtos' %}">Produtos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{% url 'lista_clientes' %}">Clientes</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{% url 'lista_vendas' %}">Vendas</a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <main>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    {% block content %}{% endblock %}
                </div>
            </div>
        </div>
    </main>
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <p>&copy; 2023 Sistema de Vendas</p>
                </div>
            </div>
        </div>
    </footer>
    <script src="//code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>
